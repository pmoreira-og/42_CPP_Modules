/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   Harl.cpp                                           :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: pmoreira <pmoreira@student.42lisboa.com    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/10/29 11:22:35 by pmoreira          #+#    #+#             */
/*   Updated: 2025/10/29 11:49:32 by pmoreira         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "../include/Harl.hpp"

Harl::Harl()
{
	std::cout << "A wild Harl has appeared" << std::endl;
}

Harl::~Harl()
{
	std::cout << "Harl is gone now" << std::endl;
}

void Harl::debug( void )
{
	std::cout << "[ DEBUG ]" << std::endl;
	std::cout << "Run valgrind on that it probably have leaks" << std::endl;
}

void Harl::info( void )
{
	std::cout << "[ INFO ]" << std::endl;
	std::cout << "C is a strongly typed language" << std::endl;
}

void Harl::warning( void )
{
	std::cout << "[ WARNING ]" << std::endl;
	std::cout << "You gonna have problems putting that on Norm later..." << std::endl;
}

void Harl::error( void )
{
	std::cout << "[ ERROR ]" << std::endl <<
"                                                                                                    " <<  std::endl <<
"                                                                                                    " <<  std::endl <<
"                                                                                                    " <<  std::endl <<
"                                                                                                    " <<  std::endl <<
"                                                                                                    " <<  std::endl <<
"                                                                                                    " <<  std::endl <<
"                                                                                                    " <<  std::endl <<
"                                                                                                    " <<  std::endl <<
"                              ÷÷≠ ÷÷≈  ≈≠                                                           " <<  std::endl <<
"                           ×≠ ×≈≈ ×=∞  ÷∞                                                           " <<  std::endl <<
"                            ×≈ ×≠≈ -≈  =∞                                                           " <<  std::endl <<
"                              ---×----÷∞                                                            " <<  std::endl <<
"                                   ÷-×≈                                                             " <<  std::endl <<
"                                     ×≠≈                                                            " <<  std::endl <<
"                                    ×-∞-≈≈                                                          " <<  std::endl <<
"                                   ×-×÷∞×√                           ∞∞∞∞∞∞≈                        " <<  std::endl <<
"                                  -----≈≈√√                         ∞∞∞∞≈∞≈≈∞                       " <<  std::endl <<
"                                 ×-----×÷∞√                         ≈∞∞≠=∞≈≈≈≠                      " <<  std::endl <<
"                                ÷-----×-≠∞∞∞       ≈∞=≈             ∞∞∞∞≠≈≠≈≠×                      " <<  std::endl <<
"                                -------×÷≠∞∞     =≠∞=÷==∞∞√          ≈=÷÷≠=÷-                       " <<  std::endl <<
"                               ------××××=≈∞    =∞∞==÷÷∞=∞            ≈=÷-                          " <<  std::endl <<
"                              ------××××××≠∞∞   ∞≠√∞∞×÷√≈             ≈≈×                           " <<  std::endl <<
"                             ×-----×××××××÷≠∞  ≈∞≠√√∞≠≠∞             ≈≈=-                           " <<  std::endl <<
"                             -----×××××××××÷≈∞==÷×≠≠×÷-=×            ∞≈=-                           " <<  std::endl <<
"≈≈≈≈                        ------××××××××××÷≈=≠≈×≠∞≈≈≈×=√           ∞≈÷×                           " <<  std::endl <<
"≠≠≠≠≈≈∞≈                   -------×××××××-×××÷÷≠≈×÷==÷÷÷≠×∞          ≈≈×                            " <<  std::endl <<
"××××÷==≠≈∞≈                ------×××××××--××-×÷÷÷××××--×××÷          ≈≠-                            " <<  std::endl <<
"××××××××÷=≈∞∞∞             ------××××××-÷÷×--××÷=÷×××-××-×           ∞×                             " <<  std::endl <<
"×--××××××××÷=≈∞∞∞         ×------××××××××-----×××÷÷×--×-≠            ≠×                             " <<  std::endl <<
"        --××××÷=≠≈≈∞∞     ------××××××--------××××××××-÷-≈           ÷           ≈≈                 " <<  std::endl <<
"            ×-××××÷=≠≈≈∞≈≠-----××-×-----------×-××××××××=-×∞        =-     ≈≈÷-----                 " <<  std::endl <<
"               ××-×××××÷÷÷--------------------×××××××××××=≈--≈∞∞ ∞∞∞∞∞≠≈÷---------                  " <<  std::endl <<
"                  -------×--------------------××××××××××××÷≠≠--÷∞∞≈÷-÷≈≈--------×                   " <<  std::endl <<
"                    ×--------------------------×××××××-×××××--××---×÷≈=××------                     " <<  std::endl <<
"                      -----------------------------------×--------××÷××--------×                    " <<  std::endl <<
"                        ----------------------×××××××××××××---------------------                    " <<  std::endl <<
"                         ------------------- -×××××××××××××---------------------                    " <<  std::endl <<
"                         -----------------   ×××××××××××××××-------------------                     " <<  std::endl <<
"                          --------------×    ×××××××××××××××××-≠××-----------×                      " <<  std::endl <<
"                            -----------×    -×××××××××××××××××××××-                                 " <<  std::endl <<
"                               -------    -×-××××××××××××××××××××××-                                " <<  std::endl <<
"                                         ×××××××××××××××---×××××××××××-                             " <<  std::endl <<
"                                        ××-×××××××××××------××××××××××××                            " <<  std::endl <<
"                                      -×××××××××××××--×-×------×××××××××-                           " <<  std::endl <<
"                                     -××××××××××××--×------------××××××××-                          " <<  std::endl <<
"                                   ×-×××××××××××------------------×××××××××                         " <<  std::endl <<
"                                  --××××××××××---------------×-××××××××××××÷÷                       " <<  std::endl <<
"                          ×÷÷÷×÷-×-×××××××××-----------××××××××××××××××××××××÷÷÷÷÷÷÷÷÷              " <<  std::endl <<
"                      ÷÷×××××××-×-----××××--×---×-------------------××××××××-×××××××÷÷×÷×××         " <<  std::endl <<
"                     ×××--------××××××××--------××××××××××××××××××××××××××××××--×××---×--×-×        " <<  std::endl <<
"                     ××-------×××××-----×------------×------------------------------××----××        " <<  std::endl <<
"                    ×------------××××-×××-------------××××××-----×-----------------×××------×       " <<  std::endl <<
"                 -----------------------------×××××××--×-------×-×----------------×××-------×       " <<  std::endl <<
"               ×---------------------×-×------××××-------------------------------------------×      " <<  std::endl <<
"             ------------------×-----------×-----------------×-----------×--------------------××    " <<  std::endl <<
"         ×------------------×-----------------------------------------------×------------------××   " <<  std::endl <<
"     ×---××-------------×----------------×-----------------------------------------------------×××  " <<  std::endl;
	std::cout <<
"         ███████╗███████╗ ██████╗     ███████╗ █████╗ ██╗   ██╗██╗  ████████╗██╗\n" << 
"         ██╔════╝██╔════╝██╔════╝     ██╔════╝██╔══██╗██║   ██║██║  ╚══██╔══╝██║\n" << 
"         ███████╗█████╗  ██║  ███╗    █████╗  ███████║██║   ██║██║     ██║   ██║\n" << 
"         ╚════██║██╔══╝  ██║   ██║    ██╔══╝  ██╔══██║██║   ██║██║     ██║   ╚═╝\n" << 
"         ███████║███████╗╚██████╔╝    ██║     ██║  ██║╚██████╔╝███████╗██║   ██╗\n" << 
"         ╚══════╝╚══════╝ ╚═════╝     ╚═╝     ╚═╝  ╚═╝ ╚═════╝ ╚══════╝╚═╝   ╚═╝\n\n";
}

void Harl::complain( std::string level )
{
	std::string list[4] = {"DEBUG", "INFO", "WARNING", "ERROR"};
	void (Harl::*methods[4])() = {&Harl::debug, &Harl::info, &Harl::warning, &Harl::error};
	t_type logger = DEFAULT;

	for (int i = 0; i < 4; i++)
	{	
		if (level == list[i])
		{
			logger = (t_type) i;
			break;
		}
	}
	switch (logger)
	{
	case DEBUG:
		(this->*methods[0])();
	case INFO:
		(this->*methods[1])();
	case WARNING:
		(this->*methods[2])();
	case ERROR:
		(this->*methods[3])();
		return;
	default:
		break;
	}
	std::cout << "[ Probably complaining about insignificant problems ]" << std::endl;
}